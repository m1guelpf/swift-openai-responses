name: Test

on:
    push:
        branches: [main]
    pull_request:

jobs:
    build:
        strategy:
          matrix:
            os: [ubuntu-latest, macos-latest]
            swift: ["6.0", "6.1", "6.2", "main-snapshot"]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Install Swift toolchain
              shell: bash
              run: |
                set -e

                export SWIFTLY_BIN_DIR=${{ github.workspace }}/.swiftly/bin
                export SWIFTLY_HOME_DIR=${{ github.workspace }}/.swiftly/share

                echo "$SWIFTLY_BIN_DIR" >> $GITHUB_PATH
                echo "SWIFTLY_HOME_DIR=$SWIFTLY_HOME_DIR" >> $GITHUB_ENV
                echo "SWIFTLY_BIN_DIR=$SWIFTLY_BIN_DIR" >> $GITHUB_ENV

                export PATH=$SWIFTLY_BIN_DIR:$PATH

                mkdir -p $SWIFTLY_HOME_DIR
                mkdir -p $SWIFTLY_BIN_DIR

                if ${{ inputs.os == 'ubuntu-latest' }} ; then
                  curl -O https://download.swift.org/swiftly/linux/swiftly-${{ inputs.arch }}.tar.gz
                  file swiftly-${{ inputs.arch }}.tar.gz
                  tar -xzf swiftly-${{ inputs.arch }}.tar.gz -C $SWIFTLY_BIN_DIR
                  rm swiftly-${{ inputs.arch }}.tar.gz
                else
                  curl -O https://download.swift.org/swiftly/darwin/swiftly.pkg
                  installer -pkg swiftly.pkg -target CurrentUserHomeDirectory
                  cp ~/.swiftly/bin/swiftly $SWIFTLY_BIN_DIR
                  rm swiftly.pkg
                fi

                swiftly init -no-modify-profile --quiet-shell-followup --assume-yes --skip-install --verbose
                echo "swiftly version: $(swiftly --version)" >&2

                swiftly install --use ${{ matrix.swift }}
                swiftly list

            - uses: actions/checkout@v4

            - name: Restore .build
              id: restore-build
              uses: actions/cache/restore@v4
              with:
                path: .build
                restore-keys: "swiftpm-tests-build-${{ runner.os }}-${{ matrix.swift }}-"
                key: "swiftpm-tests-build-${{ runner.os }}-${{ matrix.swift }}-${{ github.event.pull_request.base.sha || github.event.after }}"

            - name: Build
              run: swift build --build-tests --enable-code-coverage

            - name: Cache .build
              if: steps.restore-build.outputs.cache-hit != 'true'
              uses: actions/cache/save@v4
              with:
                path: .build
                key: "swiftpm-tests-build-${{ runner.os }}-${{ matrix.swift }}-${{ github.event.pull_request.base.sha || github.event.after }}"

            - name: Run tests
              run: swift test --skip-build --enable-code-coverage --parallel

            - name: Test coverage
              uses: maxep/spm-lcov-action@0.3.1
              with:
                  output-file: ./coverage/lcov.info
